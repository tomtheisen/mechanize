@import "prefixer.less";
@import "mixins.less";

@font-face {
  font-family: 'Aldrich';
  font-style: normal;
  font-weight: 400;
  src: local('Aldrich'), url(aldrich.woff) format('woff');
}

@background: #272D40;
@panel: #364659;
@accent: #55736D;
@highlight: #D0D3B8;
@green: #9DBF8E;
@space: #0D1216;

* {
    .box-sizing(border-box);
}

html {
    height: 100%;
    margin: 0;
    font-size: 10pt;
}

.panel :last-child {
    margin-bottom: 0 !important;
}

body {
    font-family: 'Aldrich', sans-serif;
    background-color: @background;
    color: @highlight;
    margin: 0;
    padding-top: 2rem;
    height: 100%;
}

// come on LESS, get your shit together
@-webkit-keyframes rotatea { 
    from { -webkit-transform: rotateX(0deg) rotateY(0deg) rotateZ(0deg); }
    to { -webkit-transform: rotateX(360deg) rotateY(720deg) rotateZ(1080deg); }
}
@-webkit-keyframes rotateb { 
    from { -webkit-transform: rotateX(0deg) rotateY(0deg) rotateZ(0deg); }
    to { -webkit-transform: rotateX(720deg) rotateY(-1080deg) rotateZ(360deg); }
}

@-o-keyframes rotatea { 
    from { -o-transform: rotateX(0deg) rotateY(0deg) rotateZ(0deg); }
    to { -o-transform: rotateX(360deg) rotateY(720deg) rotateZ(1080deg); }
}
@-o-keyframes rotateb { 
    from { -o-transform: rotateX(0deg) rotateY(0deg) rotateZ(0deg); }
    to { -o-transform: rotateX(720deg) rotateY(-1080deg) rotateZ(360deg); }
}
@-moz-keyframes rotatea { 
    from { -moz-transform: rotateX(0deg) rotateY(0deg) rotateZ(0deg); }
    to { -moz-transform: rotateX(360deg) rotateY(720deg) rotateZ(1080deg); }
}
@-moz-keyframes rotateb { 
    from { -moz-transform: rotateX(0deg) rotateY(0deg) rotateZ(0deg); }
    to { -moz-transform: rotateX(720deg) rotateY(-1080deg) rotateZ(360deg); }
}
@keyframes rotatea { 
    from { transform: rotateX(0deg) rotateY(0deg) rotateZ(0deg); }
    to { transform: rotateX(360deg) rotateY(720deg) rotateZ(1080deg); }
}
@keyframes rotateb { 
    from { transform: rotateX(0deg) rotateY(0deg) rotateZ(0deg); }
    to { transform: rotateX(720deg) rotateY(-1080deg) rotateZ(360deg); }
}

header {
    h1 {
        color: @background;
    }

    button, label {
        .hover-highlight-background(@panel);

        &.warning {
            .hover-highlight-background(#662937);
        }
    }

    .no-select();
    background-color: black;
    color: @highlight;
    max-height: 1.6rem;
    margin: 0;
    padding: 0 2rem;
    overflow: hidden;
    position: fixed;
    z-index: 99;
    width: 100%;
    top: 0;
    left: 0;

    &:hover {
        max-height: 80rem;
        padding-bottom: 2rem;
    }

    .transition-property(~"padding-bottom, max-height");
    .transition-duration(200ms);
    .transition-timing-function(linear);

    &.maxed {
        height: 100%;
        max-height: none;
        .transition-duration(0ms);
    }

    .rotation-clipper {
        display: none;
        body.vfx & { display: block; }

        .fill-parent;

        font-size: 200%;
        overflow: hidden;

        z-index: -1;
    }

    .rotation-container {
        .fill-parent;
        .preserve-3d;
        .perspective(24em);
    }

    .cuboid {
        @size: 25em;
        @radius: @size * 0.6;
        @face-size: @size * 0.4;

        .absolute-center(@size, @size);
        .preserve-3d;
        .animation(rotatea 200s linear 0s infinite normal);

        .face {
            .absolute-center(@face-size, @face-size);
            border: solid #333 (@face-size * 0.05);
            .opacity(0.5);
        }

        .face1 { .transform(translateZ(@radius)); }
        .face2 { .transform(rotateY(45deg) translateZ(@radius)); }
        .face3 { .transform(rotateY(90deg) translateZ(@radius)); }
        .face4 { .transform(rotateY(135deg) translateZ(@radius)); }
        .face5 { .transform(rotateY(180deg) translateZ(@radius)); }
        .face6 { .transform(rotateY(225deg) translateZ(@radius)); }
        .face7 { .transform(rotateY(270deg) translateZ(@radius)); }
        .face8 { .transform(rotateY(315deg) translateZ(@radius)); }
        .face9 { .transform(rotateX(45deg) translateZ(@radius)); }
        .face10 { .transform(rotateX(90deg) translateZ(@radius)); }
        .face11 { .transform(rotateX(135deg) translateZ(@radius)); }
        .face12 { .transform(rotateX(225deg) translateZ(@radius)); }
        .face13 { .transform(rotateX(270deg) translateZ(@radius)); }
        .face14 { .transform(rotateX(315deg) translateZ(@radius)); }
        .face15 { .transform(rotateY(90deg) rotateX(45deg) translateZ(@radius)); }
        .face16 { .transform(rotateY(90deg) rotateX(135deg) translateZ(@radius)); }
        .face17 { .transform(rotateY(90deg) rotateX(225deg) translateZ(@radius)); }
        .face18 { .transform(rotateY(90deg) rotateX(315deg) translateZ(@radius)); }
    }

    .cube {
        @size: 10em;
        @radius: @size * 0.5;

        .absolute-center(@size, @size);
        .preserve-3d;
        .animation(rotateb 90s linear 0s infinite normal);

        .face {
            .fill-parent();
            background-color: rgba(64, 64, 64, 0.5);
            color: black;
            padding: 1em;
            border: solid #111 (@size * 0.05);
        }

        .face1 { .transform(translateZ(@radius)); }
        .face2 { .transform(rotateY(90deg) translateZ(@radius)); }
        .face3 { .transform(rotateY(180deg) translateZ(@radius)); }
        .face4 { .transform(rotateY(270deg) translateZ(@radius)); }
        .face5 { .transform(rotateX(90deg) translateZ(@radius)); }
        .face6 { .transform(rotateX(270deg) translateZ(@radius)); }
    }

    .max-toggle {
        width: 2rem;
        height: 2rem;
        position: absolute;
        bottom: 2rem;
        right: 2rem;
        cursor: pointer;

        border-color: transparent white white transparent;
        border-width: 1rem;
        border-style: solid;

        &:hover::before {
            content: "toggle\a0menu";
            position: absolute;
            display: block;
            right: 2rem;
        }
    }

    #gameControls {
        .content {
            border: solid @background 0.3rem;
            background-color: fade(@background, 30%);
            border-radius: 1rem;
            padding: 0.6rem;
            position: relative;
            margin: 1rem 1rem 1rem 0;

            h3 {
                position: absolute;
                top: -1rem;
            }
        }

        .controlGroup {
            display: inline-block;

            button, label {
                vertical-align: text-top;
            }
        }

        #notificationsLog {
            .allow-select();
        }
    }
}

h1, h2, h3, h4 {
    margin: 0 0 1rem 0;
}

h1 {
    font-size: 2rem;
}

h3 {
    font-size: 1.1rem;
}

section {
    margin-bottom: 1.2rem;
}

p {
    padding: 0.3rem;
}

ul {
    padding: 0;
    list-style-type: none;
}

button, label {
    display: inline-block;
    .hover-highlight-background(@accent);
    color: @highlight;
    border-width: 0; 
    .border-radius(1rem);
    height: 1.6rem;
    padding: 0 1.2rem;
    font-family: 'Aldrich', sans-serif;
    font-size: 1rem;
    cursor: pointer;
    margin: 0.3rem;

    &[disabled] {
        background-color: @accent;
        color: @panel;
        cursor: not-allowed;
    }
}

input[type=text],
input:not([type]) {
    font-family: inherit;
    height: 1.6rem;
    border-radius: 1rem;
    padding: 0 0.5rem;
    background-color: @background;
    .placeholder-color(@panel);
    color: @highlight;
    border-width: 0;
}

a {
    color: @highlight;
}

#systemMessage {
    padding: 3rem;
}

#gameSurface {
    width: 100%;
    height: 100%;
    white-space: nowrap;
    position: relative;
    .no-select();

    &>* {
        white-space: normal;
    }
}

#notifications {
    position: fixed;
    margin: 1.2rem;
    right: 0;
    bottom: 0;
    
    .notification {
        margin: 1.2rem;
        .border-radius(1.2rem);
        padding: 0.6rem 1.2rem;
        background-color: @panel;
        max-width: 60rem;
        max-height: 5rem;
        white-space: nowrap;
        overflow: hidden;
        cursor: pointer;
        text-align: right;
    }
}

.progress {
    height: 2.4rem;
    .border-radius(0 1.2rem 1.2rem 0);
    padding: 0.6rem 0.6rem 0.6rem 0;
    margin: 1rem 0;
    background-color: @accent;
    overflow: hidden;

    .value {
        .border-radius(0 0.6rem 0.6rem 0);
        height: 1.2rem;
        text-indent: 1em;
        font-size: 0.8rem;
        background-color: @highlight;
        color: @panel;
        position: relative;
        white-space: nowrap;
    }
}

.panel {
    .border-radius(1.2rem);
    background-color: @panel;
    color: @highlight;
    padding: 0.9rem;
    width: 22rem;
    vertical-align: top;
    z-index: 1;
    position: absolute;
    border: solid @background 0.3rem;

    h2 {
        cursor: move;
    }
}

.resource-container {
    overflow: auto;
    margin-top: 1.2rem;
    padding: 0.6rem;
    background-color: @space;
    border: solid @accent 0.6rem;
    .border-radius(0.6rem);
    margin: 0.6rem 0;
    display: inline-block;
}

.wrap-every(@n) {
    /* http://stackoverflow.com/a/18122516/44743 */
    @t: ~":nth-child(@{n}n+1)";
    &@{t} {
        clear: left;
    }
}

.resource {
    @resource-size: 24px;

    float: left;
    width: @resource-size;
    height: @resource-size;
    margin: 1px;
    position: relative;

    .wrap-every(8);
    
    .resource(@tile-index) {
        background-position: (-@resource-size * @tile-index) 0;
    }

    background-image: url(resource-tiles.png);
    background-size: auto @resource-size;
    background-color: red;  /* for debugging, should never see */
    &.rock      { .resource(1); }
    &.iron      { .resource(2); }
    &.concrete  { .resource(3); }
    &.none { background-color: #000; }

    &.inline {
        display: inline-block;
        vertical-align: middle;
        float: none;
    }

    &.actionable {
        cursor: pointer;
    }
}

.mini-progress {
    width: 0%;
    height: 10%;
    position: absolute;
    background-color: @green;
}

.active {
    border: solid #ccc 1px;
    .animation(active-pulse 0.5s ease 0s infinite alternate);
}

// come on LESS, get your shit together
@-o-keyframes active-pulse { from {border-color: #333;} to {border-color: #ddd;}}
@-moz-keyframes active-pulse { from {border-color: #333;} to {border-color: #ddd;}}
@-webkit-keyframes active-pulse { from {border-color: #333;} to {border-color: #ddd;}}
@keyframes active-pulse { from {border-color: #333;} to {border-color: #ddd;}}

.panel .device {
    margin-bottom: 1.2rem;

    .deviceHeader {
        .detacher {
            height: 100%;
            padding: 0 0.3rem;
            margin: 0;
            cursor: pointer;
            width: 2.4rem;
            height: 1.6rem;
            line-height: 1.6rem;
            position: relative;
            left: 2.4rem;
        }

        height: 1.6rem;
        line-height: 1.6rem;
        padding: 0;
        margin-right: 2.4rem;
        position: relative;
        white-space: nowrap;
    }

    .controls > :first-child {
        margin-top: 0.6rem;
    }
}

.collapser {
    cursor: pointer;
}
.collapser.collapsed::before {content: "\25b6"; }
.collapser.expanded::before {content: "\25bc"; }
.collapser + * {
    margin-left: 1.2rem;
}
.collapser.collapsed + * {
    display: none;
}

.device {
    .animate-color (@color)  {
        background-color: (@color);
        .transition-duration(0s);
    }

    .detacher {
        display: block;
        float: right;
    }

    .deviceHeader {
        .border-radius(0.6rem);
        background-color: @panel;
        .transition(background-color 500ms ease-out);
    }

    &.bumped .deviceHeader { .animate-color(@panel + #222); }
    &.error  .deviceHeader { .animate-color(@panel + #400); }   
}